// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["createMany"]
}

model sports {
  id Int @id @default(autoincrement())
  data_type String
  data_contents Json
  season String
  created_at  DateTime @default(now())
}

model post {
  id Int @id @default(autoincrement())
  title String
  contents String
  views Int @default(0)
  use_yn String @default("Y")
  created_at DateTime @default(now())
  updated_at DateTime?
  category category @relation(fields: [category_id], references: [id])
  category_id String
  images image[]
  comments comment[]
  like like[]
}

model comment {
  id Int @id @default(autoincrement())
  contents String
  author_id String
  author_pwd String
  author_ip String
  depth Int @default(0)
  parentId Int?
  created_at DateTime @default(now())
  updated_at DateTime?
  use_yn String @default("Y")
  post post @relation(fields: [postId], references: [id])
  postId Int
  avatar avatar? @relation(fields: [avatarId], references: [id])
  avatarId Int?
}

model category {
  id String @id @default(uuid())
  name String @unique
  type String
  post post[]
  description String?
}

model image {
  id Int @id @default(autoincrement())
  path String
  post post @relation(fields: [postId], references: [id])
  postId Int
}

model avatar {
  id Int @id @default(autoincrement())
  comment comment?
  topType String
  accessoriesType String
	hairColor String
	facialHairType String
	clotheType String
	clotheColor String
	eyeType String
	eyebrowType String
	mouthType String
	skinColor String
}

model like {
  ip String
  post post @relation(fields: [postId], references: [id])
  postId Int 
  created_at DateTime @default(now())

  @@id([ip, postId])
}

model user {
  id Int @id @default(autoincrement())
  userEmail String
  password String
  role String
  created_at DateTime @default(now())
}

model memo {
  id Int @id @default(autoincrement())
  hashTag String
  contents String
  use_yn String @default("Y")
  created_at DateTime @default(now())
  updated_at DateTime?
}